"lin-ui": "~0（主要版本）.6（次要版本）.0（patch版本）"  ~表示会在当前组件库选择当前0.6.x的最高版本（semver版本管理）
^1.2.3 更新次要版本号（还有很多写法）

小程序在引入NPM包的时候需要使用微信的编辑当中的构建NPM miniprogram_npm小程序帮我们创建的

必须在组件的灵活性和易用性之间/稳定之间做出一个选择，找到一个平衡点

组件的意义是什么：小程序也是全组件

组件的有点  提供样式，骨架，业务逻辑（行为）

灵活性
1.外部样式类 组件样式的修改
2.slot插槽 骨架的修改
3.业务逻辑的改造/提供若干种业务逻辑，传参Behavior

AB 如果对当前组件的修过过于大，应该考虑新的组件或者通过组合自己去封装一个组件
提供组件的默认值，插槽的默认值
考虑是否设置宽和高，没有充分的理由不要设置高和宽

优惠卷：满减 折扣  使用条件 全场卷  品类 核算 状态过期
领取  活动（优惠卷）开始时间 结束时间 online 分类
使用
前端过期  大型
"backgroundColor": "#000000"页面的配置中设置的是下拉效果出现的窗口的背景颜色
尽可能减少前端向后端发送的请求

http的请求
1。每个数据都发送http
2.home只发送一个请求
3.部分http请求进行合并（优先考虑）

1.http的请求数量
2.http多少次数据库查询 join（重要考虑条件）
3.接口的灵活性和接口的可维护性，接口的粒度比较小，组合性较大，可维护性强

WEB应用的主要瓶颈在IO  IO密集型  CPU密集型


O复杂度

如何保存
缓存到当前页面：缺点该数据加载一次就不会变更，在使用该数据的时候都需要对当前数据进行判断，该数据是否是存在的状态
保存到全部APP下面：缺点该方式导致变量不在自己的JS当中使用不是根方便
类可以保存数据，但是不可以保存状态
类的对象可以保存数据和对象
保证调用方调用过程简单

standard product unit 标准化产品单元

sku  stock keeping unit 库存量单位
技术输出  手记
static 是否需要加通过考虑是否需要保存状态 一次性的获取可以直接加上static

如果需要等待此次调用的结果就加await
async强制保证一个方法返回promise
所有的小程序都不支持驼峰的写法  需要将驼峰转化为-的形式例如SpuList - Spu-list

enable-flex会导致容器特别大即使使用了flex布局也会出现这种情况，可以在内部添加一个view使用flew布局
wxml只支持ES5  filter 过滤器

也是JavaScript
小程序的逻辑层 /视图层
小程序运行原理
IOS javaScriptCore  WKWebView
Android V8  Xweb chrome
PC Nw.js Chromium
以web技术驱动

如何自定义代码片段：file -->setting---> Live Templates--->右边的+号添加template group 然后添加代码片段

s-spu-scroll 有时候对自定义组件设置边距是无效的，应该使用外部样式类

点击态
app.wxss是会不会影响自定义组件的

抽象节点

抽象节点的粒度更大，抽象节点内部需要设置一个自定义组件，但是他的使用更加灵活，灵活的同时就是他的易用性比较差
自定义性是一个终极的解决方案

分页数据需要考虑的情况

1.当前返回数据一条都没有
2.当前是最后一条数据，没有更多的数据了
3.累加100 1-20 21-40 setData会重新渲染界面如果只渲染当前数据会覆盖掉前面渲染的数据当渲染21-40的时候应该渲染1-40的数据
4.非分页数据：a.提示正在加载  b.加载完成 c 没有更多的数据
5.上滑页面触底 加载 避免用户重复发送请求 使用Redis做缓存 使用锁
6.控制start和count
//类为核心   函数为核心
先确定目的想到自己想要数据，提供接口去实现，将细节都封装到当前的对象当中
//在考虑的时候要考虑到当前对象是否需要保存数据，如果当前对象需要保存数据，那么应该使用对象。如果不需要保存状态则可以使用类来实现
写代码的原则：多用return 结束函数提前结束函数少用else else的可读性很差
1个函数不应该有多个return多个分支，分支太多会对逻辑思维增加负重，少用嵌套if-else
if（）{
}
else if (){
}
else if (){

}
使用switch case替换

提供统一异常处理
aysnc 和await必须成对出现否则返回的是promise 会导致很多问题，排查起来非常困难
/自动累加数据 refresh 是为了清空瀑布流的数据
//组件出不来的问题 未引入组件   组件的名字写错了  数据结构错误 忘记await
使用外部样式的时候最好加上important


如何让图片正确显示小程序的mode

"onReachBottomDistance": 50距离底部多少的时候开始加载
<l-loadmore show="true" size="mini">
<view slot="content">如果不添加这个属性无法正常显示

通过事件去传递参数 Eventchannel

spu = standard product unit 标准化产品单元

SKU= stock keeping unit 库存量单位

SPU  商品/产品
SKU  单品/商品

复杂问题的解决方式：在页面组件等命名上具有符号化（业务中的关键词，命名重要性）抽象核心问题自定义组件是一个辅助思考的工具
//变量命名的技巧：带上领域对象的前缀 sku sku-controller sku-xxxx(不建议) 抛开领域对象,复杂业务中不应出现通用的名字，简短的名字



